#!/usr/bin/env node
var r = require('rethinkdb');
var db = require('../db.js')
var fs = require('fs')
var Chance = require('chance');
var chance = new Chance();
var processImage = require('../processImage.js')

function main() {
  runRoutines(1)
}
main()

//run N routines.
//n -> # of routines
//i -> # of routines completed
function runRoutines(n, i) {
  var i = arguments[1] || 1
  var m = n - 1
  console.log(`__ STARTING ROUTINE ${i} __`)
  makeTopic('rumee', function(err, res) {
    if (err) return console.error(err)
    makeUser(function(user) {
      console.log(' - user created:', user.id)
      makeStory(user, function(story_id) {
        uploadImage(story_id, null, function(err, res) {
          if (err) console.error(err)
          makeResponse(user, story_id, function(done) {
            console.log(` - routine #${i} done`, "\u2713")
            if (m > 0) runRoutines(m, i + 1)
            else return db.closeConnection()
          })
        })
      })
    })
  })
}

function makeUser(cb) {
  var user = {
    id: guid(),
    username: chance.first(),
    email: chance.email(),
    password: chance.word()
  }
  db.createUser(user, function(err, res) {
    if (err) { throw err }
    else { return cb(user) }
  })
}

function makeTopic(title, cb) {
  var topicObj = {
    id: title,
    description: 'This is description text for a topic.',
    active: true,
    img: "https://s3.amazonaws.com/wiw-full/" + title + ".jpg"
  }
  db.createTopic(topicObj, function(err, res) {
    if (err) return cb(err)
    uploadImage(title, 'testimg/rumee.jpg', function(err, res) {
      if (err) return cb(err)
      console.log(` - topic: ${title} created`)
      return cb(null, true)
    })
  })
}

function makeStory(user, cb) {
  var story_id = guid()
  var paragraph = chance.paragraph()
  var story = {
    id: story_id,
    title: chance.sentence({words: chance.integer({min: 2, max: 10})}),
    author: user.username,
    author_id: user.id,
    content: paragraph,
    topic: 'rumee',
    tags: {
      form: chance.pickone(forms),
      theme: [chance.pickone(themes), chance.pickone(themes)],
      length: paragraph.split(' ').length + ' words',
      location: chance.pickone(locations)
    },
    img: "https://s3.amazonaws.com/wiw-full/" + story_id + ".jpg",
  }
  db.postStory(story, function(err, res) {
    if (err) { console.error(err) }
    console.log(' - story posted:', story_id)
    cb(story_id)
  })
}

function makeResponse(user, story_id, cb) {
  var response = {
    id: guid(),
    story_id: story_id,
    title: chance.sentence({words: chance.integer({min: 2, max: 10})}),
    author: user.username,
    author_id: user.id,
    date: r.now(),
    content: chance.paragraph(),
  }
  db.postResponse(story_id, response, function(err, res) {
    if (err) {
      console.error(err)
      return cb(false)
    }
    console.log(' - response posted')
    cb(true)
  })
}

//read image and upload to S3.
//picks random image if no 'file' is supplied
function uploadImage(user_id, file, cb) {
  var imgurl = file ? file : `testimg/${chance.integer({ min: 1, max: 11 })}.jpg`
  fs.readFile(imgurl, function(err, data) {
    if (err) return console.log(err);
    processImage(data, user_id, function(err, res) {
      if (err) { return cb(err) }
      cb(null, true)
    })
  })
}

function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
  }
  return s4();
}

const themes = ['body', 'climate', 'displacement', 'faith', 'food',
  'identity', 'leadership', 'love', 'mothers']
const forms = ['documentary', 'flash-fiction', 'flash non-fiction',
  'narrative', 'photo essay', 'poem', 'sponsored', 'visual poem']
const locations = ['kenya', 'minnesota']